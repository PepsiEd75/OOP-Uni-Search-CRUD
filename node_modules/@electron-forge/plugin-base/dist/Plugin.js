"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
Object.defineProperty(exports, "StartOptions", {
    enumerable: true,
    get: function() {
        return _sharedTypes.StartOptions;
    }
});
exports.PluginBase = exports.default = void 0;
var _sharedTypes = require("@electron-forge/shared-types");
class Plugin {
    constructor(config){
        this.config = config;
        /** @internal */ this._resolvedHooks = {};
        Object.defineProperty(this, '__isElectronForgePlugin', {
            value: true,
            enumerable: false,
            configurable: false
        });
    }
    init(_dir, _config) {
        // This logic ensures that we only call getHooks once regardless of how many
        // times we trip hook logic in the PluginInterface.
        this._resolvedHooks = this.getHooks();
        this.getHooks = ()=>this._resolvedHooks
        ;
    }
    getHooks() {
        return {};
    }
    async startLogic(_startOpts) {
        return false;
    }
}
exports.default = Plugin;
exports.PluginBase = Plugin;

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uL3NyYy9QbHVnaW4udHMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgRm9yZ2VIb29rTWFwLCBJRm9yZ2VQbHVnaW4sIFJlc29sdmVkRm9yZ2VDb25maWcsIFN0YXJ0T3B0aW9ucywgU3RhcnRSZXN1bHQgfSBmcm9tICdAZWxlY3Ryb24tZm9yZ2Uvc2hhcmVkLXR5cGVzJztcblxuZXhwb3J0IHsgU3RhcnRPcHRpb25zIH07XG5cbmV4cG9ydCBkZWZhdWx0IGFic3RyYWN0IGNsYXNzIFBsdWdpbjxDPiBpbXBsZW1lbnRzIElGb3JnZVBsdWdpbiB7XG4gIHB1YmxpYyBhYnN0cmFjdCBuYW1lOiBzdHJpbmc7XG5cbiAgLyoqIEBpbnRlcm5hbCAqL1xuICBfX2lzRWxlY3Ryb25Gb3JnZVBsdWdpbiE6IHRydWU7XG4gIC8qKiBAaW50ZXJuYWwgKi9cbiAgX3Jlc29sdmVkSG9va3M6IEZvcmdlSG9va01hcCA9IHt9O1xuXG4gIGNvbnN0cnVjdG9yKHB1YmxpYyBjb25maWc6IEMpIHtcbiAgICBPYmplY3QuZGVmaW5lUHJvcGVydHkodGhpcywgJ19faXNFbGVjdHJvbkZvcmdlUGx1Z2luJywge1xuICAgICAgdmFsdWU6IHRydWUsXG4gICAgICBlbnVtZXJhYmxlOiBmYWxzZSxcbiAgICAgIGNvbmZpZ3VyYWJsZTogZmFsc2UsXG4gICAgfSk7XG4gIH1cblxuICBpbml0KF9kaXI6IHN0cmluZywgX2NvbmZpZzogUmVzb2x2ZWRGb3JnZUNvbmZpZyk6IHZvaWQge1xuICAgIC8vIFRoaXMgbG9naWMgZW5zdXJlcyB0aGF0IHdlIG9ubHkgY2FsbCBnZXRIb29rcyBvbmNlIHJlZ2FyZGxlc3Mgb2YgaG93IG1hbnlcbiAgICAvLyB0aW1lcyB3ZSB0cmlwIGhvb2sgbG9naWMgaW4gdGhlIFBsdWdpbkludGVyZmFjZS5cbiAgICB0aGlzLl9yZXNvbHZlZEhvb2tzID0gdGhpcy5nZXRIb29rcygpO1xuICAgIHRoaXMuZ2V0SG9va3MgPSAoKSA9PiB0aGlzLl9yZXNvbHZlZEhvb2tzO1xuICB9XG5cbiAgZ2V0SG9va3MoKTogRm9yZ2VIb29rTWFwIHtcbiAgICByZXR1cm4ge307XG4gIH1cblxuICBhc3luYyBzdGFydExvZ2ljKF9zdGFydE9wdHM6IFN0YXJ0T3B0aW9ucyk6IFByb21pc2U8U3RhcnRSZXN1bHQ+IHtcbiAgICByZXR1cm4gZmFsc2U7XG4gIH1cbn1cblxuZXhwb3J0IHsgUGx1Z2luIGFzIFBsdWdpbkJhc2UgfTtcbiJdLCJuYW1lcyI6WyJTdGFydE9wdGlvbnMiLCJQbHVnaW4iLCJjb25maWciLCJfcmVzb2x2ZWRIb29rcyIsIk9iamVjdCIsImRlZmluZVByb3BlcnR5IiwidmFsdWUiLCJlbnVtZXJhYmxlIiwiY29uZmlndXJhYmxlIiwiaW5pdCIsIl9kaXIiLCJfY29uZmlnIiwiZ2V0SG9va3MiLCJzdGFydExvZ2ljIiwiX3N0YXJ0T3B0cyIsIlBsdWdpbkJhc2UiXSwibWFwcGluZ3MiOiI7Ozs7K0JBRVNBLENBQVk7OztlQUFaQSxZQUFZOzs7O0FBRnNFLEdBQThCLENBQTlCLFlBQThCO01BSTNGQyxNQUFNO2dCQVFmQyxNQUFTLENBQUUsQ0FBQzthQUFaQSxNQUFTLEdBQVRBLE1BQVM7UUFINUIsRUFBZ0IsQUFBaEIsWUFBZ0IsQUFBaEIsRUFBZ0IsQ0FMSCxJQThCZCxDQXhCQ0MsY0FBYyxHQUFpQixDQUFDLENBQUM7UUFHL0JDLE1BQU0sQ0FBQ0MsY0FBYyxDQUFDLElBQUksRUFBRSxDQUF5QiwwQkFBRSxDQUFDO1lBQ3REQyxLQUFLLEVBQUUsSUFBSTtZQUNYQyxVQUFVLEVBQUUsS0FBSztZQUNqQkMsWUFBWSxFQUFFLEtBQUs7UUFDckIsQ0FBQztJQUNILENBQUM7SUFFREMsSUFBSSxDQUFDQyxJQUFZLEVBQUVDLE9BQTRCLEVBQVEsQ0FBQztRQUN0RCxFQUE0RSxBQUE1RSwwRUFBNEU7UUFDNUUsRUFBbUQsQUFBbkQsaURBQW1EO1FBQ25ELElBQUksQ0FBQ1IsY0FBYyxHQUFHLElBQUksQ0FBQ1MsUUFBUTtRQUNuQyxJQUFJLENBQUNBLFFBQVEsT0FBUyxJQUFJLENBQUNULGNBQWM7O0lBQzNDLENBQUM7SUFFRFMsUUFBUSxHQUFpQixDQUFDO1FBQ3hCLE1BQU0sQ0FBQyxDQUFDLENBQUM7SUFDWCxDQUFDO1VBRUtDLFVBQVUsQ0FBQ0MsVUFBd0IsRUFBd0IsQ0FBQztRQUNoRSxNQUFNLENBQUMsS0FBSztJQUNkLENBQUM7O2tCQTdCMkJiLE1BQU07UUFnQ2pCYyxVQUFVLEdBQXBCZCxNQUFNIn0=